// Code generated by protoc-gen-go. DO NOT EDIT.
// source: alpacalabs/confirmation/v1/api.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmailAddressConfirmationCode struct {
	// primary key
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the email address associated with this code
	EmailAddressId string `protobuf:"bytes,2,opt,name=email_address_id,json=emailAddressId,proto3" json:"email_address_id,omitempty"`
	// a randomly generated code
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	// when the code was generated
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// when the code expires
	ExpiresAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	// indicates whether a code has been used. Once used, all codes
	// that belong to the account become stale.
	Used bool `protobuf:"varint,6,opt,name=used,proto3" json:"used,omitempty"`
	// if true, this code cannot be used. When a user uses a code,
	// all previously issued codes are rendered stale.
	Stale                bool     `protobuf:"varint,7,opt,name=stale,proto3" json:"stale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailAddressConfirmationCode) Reset()         { *m = EmailAddressConfirmationCode{} }
func (m *EmailAddressConfirmationCode) String() string { return proto.CompactTextString(m) }
func (*EmailAddressConfirmationCode) ProtoMessage()    {}
func (*EmailAddressConfirmationCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f033f3a571f82c, []int{0}
}

func (m *EmailAddressConfirmationCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailAddressConfirmationCode.Unmarshal(m, b)
}
func (m *EmailAddressConfirmationCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailAddressConfirmationCode.Marshal(b, m, deterministic)
}
func (m *EmailAddressConfirmationCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailAddressConfirmationCode.Merge(m, src)
}
func (m *EmailAddressConfirmationCode) XXX_Size() int {
	return xxx_messageInfo_EmailAddressConfirmationCode.Size(m)
}
func (m *EmailAddressConfirmationCode) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailAddressConfirmationCode.DiscardUnknown(m)
}

var xxx_messageInfo_EmailAddressConfirmationCode proto.InternalMessageInfo

func (m *EmailAddressConfirmationCode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailAddressConfirmationCode) GetEmailAddressId() string {
	if m != nil {
		return m.EmailAddressId
	}
	return ""
}

func (m *EmailAddressConfirmationCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *EmailAddressConfirmationCode) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *EmailAddressConfirmationCode) GetExpiresAt() *timestamp.Timestamp {
	if m != nil {
		return m.ExpiresAt
	}
	return nil
}

func (m *EmailAddressConfirmationCode) GetUsed() bool {
	if m != nil {
		return m.Used
	}
	return false
}

func (m *EmailAddressConfirmationCode) GetStale() bool {
	if m != nil {
		return m.Stale
	}
	return false
}

type ConfirmEmailAddressRequest struct {
	// a randomly generated code
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// the email address associated with the code
	EmailAddressId       string   `protobuf:"bytes,2,opt,name=email_address_id,json=emailAddressId,proto3" json:"email_address_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmEmailAddressRequest) Reset()         { *m = ConfirmEmailAddressRequest{} }
func (m *ConfirmEmailAddressRequest) String() string { return proto.CompactTextString(m) }
func (*ConfirmEmailAddressRequest) ProtoMessage()    {}
func (*ConfirmEmailAddressRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f033f3a571f82c, []int{1}
}

func (m *ConfirmEmailAddressRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmEmailAddressRequest.Unmarshal(m, b)
}
func (m *ConfirmEmailAddressRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmEmailAddressRequest.Marshal(b, m, deterministic)
}
func (m *ConfirmEmailAddressRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmEmailAddressRequest.Merge(m, src)
}
func (m *ConfirmEmailAddressRequest) XXX_Size() int {
	return xxx_messageInfo_ConfirmEmailAddressRequest.Size(m)
}
func (m *ConfirmEmailAddressRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmEmailAddressRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmEmailAddressRequest proto.InternalMessageInfo

func (m *ConfirmEmailAddressRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ConfirmEmailAddressRequest) GetEmailAddressId() string {
	if m != nil {
		return m.EmailAddressId
	}
	return ""
}

type ConfirmEmailAddressResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfirmEmailAddressResponse) Reset()         { *m = ConfirmEmailAddressResponse{} }
func (m *ConfirmEmailAddressResponse) String() string { return proto.CompactTextString(m) }
func (*ConfirmEmailAddressResponse) ProtoMessage()    {}
func (*ConfirmEmailAddressResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_11f033f3a571f82c, []int{2}
}

func (m *ConfirmEmailAddressResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfirmEmailAddressResponse.Unmarshal(m, b)
}
func (m *ConfirmEmailAddressResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfirmEmailAddressResponse.Marshal(b, m, deterministic)
}
func (m *ConfirmEmailAddressResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfirmEmailAddressResponse.Merge(m, src)
}
func (m *ConfirmEmailAddressResponse) XXX_Size() int {
	return xxx_messageInfo_ConfirmEmailAddressResponse.Size(m)
}
func (m *ConfirmEmailAddressResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfirmEmailAddressResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ConfirmEmailAddressResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*EmailAddressConfirmationCode)(nil), "alpacalabs.confirmation.v1.EmailAddressConfirmationCode")
	proto.RegisterType((*ConfirmEmailAddressRequest)(nil), "alpacalabs.confirmation.v1.ConfirmEmailAddressRequest")
	proto.RegisterType((*ConfirmEmailAddressResponse)(nil), "alpacalabs.confirmation.v1.ConfirmEmailAddressResponse")
}

func init() {
	proto.RegisterFile("alpacalabs/confirmation/v1/api.proto", fileDescriptor_11f033f3a571f82c)
}

var fileDescriptor_11f033f3a571f82c = []byte{
	// 407 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xbb, 0x0e, 0xd3, 0x30,
	0x14, 0xc5, 0xe9, 0x03, 0x6a, 0xa4, 0x0a, 0x0c, 0x43, 0x14, 0x5e, 0x55, 0xc4, 0x90, 0xa5, 0x8e,
	0x52, 0x24, 0x10, 0x63, 0x5a, 0x31, 0x80, 0x3a, 0x54, 0x01, 0x75, 0xa8, 0x2a, 0x55, 0x4e, 0x7c,
	0x1b, 0x2c, 0x25, 0x75, 0x88, 0x9d, 0x8a, 0x4f, 0x60, 0xe0, 0x23, 0x10, 0x23, 0x7f, 0xc1, 0xca,
	0x57, 0xa1, 0x38, 0x2d, 0xf5, 0x40, 0x79, 0x6c, 0xb6, 0xef, 0x39, 0xc7, 0xe7, 0x9e, 0x7b, 0xf1,
	0x53, 0x56, 0x54, 0x2c, 0x63, 0x05, 0x4b, 0x55, 0x98, 0xc9, 0xc3, 0x5e, 0xd4, 0x25, 0xd3, 0x42,
	0x1e, 0xc2, 0x63, 0x14, 0xb2, 0x4a, 0xd0, 0xaa, 0x96, 0x5a, 0x12, 0xef, 0x82, 0xa2, 0x36, 0x8a,
	0x1e, 0x23, 0xef, 0x49, 0x2e, 0x65, 0x5e, 0x40, 0x68, 0x90, 0x69, 0xb3, 0x0f, 0xb5, 0x28, 0x41,
	0x69, 0x56, 0x56, 0x1d, 0xd9, 0xff, 0xec, 0xe0, 0x87, 0xaf, 0x4a, 0x26, 0x8a, 0x98, 0xf3, 0x1a,
	0x94, 0x5a, 0x58, 0x02, 0x0b, 0xc9, 0x81, 0x8c, 0xb1, 0x23, 0xb8, 0x8b, 0x26, 0x28, 0x18, 0x25,
	0x8e, 0xe0, 0x24, 0xc0, 0x77, 0xa0, 0xc5, 0xef, 0x58, 0x47, 0xd8, 0x09, 0xee, 0x3a, 0xa6, 0x3a,
	0x06, 0x4b, 0xe7, 0x35, 0x27, 0x04, 0xf7, 0x33, 0xc9, 0xc1, 0xed, 0x99, 0xaa, 0x39, 0x93, 0x97,
	0x18, 0x67, 0x35, 0x30, 0x0d, 0x7c, 0xc7, 0xb4, 0xdb, 0x9f, 0xa0, 0xe0, 0xf6, 0xcc, 0xa3, 0x9d,
	0x49, 0x7a, 0x36, 0x49, 0xdf, 0x9d, 0x4d, 0x26, 0xa3, 0x13, 0x3a, 0xd6, 0x2d, 0x15, 0x3e, 0x56,
	0xa2, 0x06, 0xd5, 0x52, 0x07, 0x7f, 0xa7, 0x9e, 0xd0, 0xb1, 0x6e, 0x9d, 0x34, 0x0a, 0xb8, 0x3b,
	0x9c, 0xa0, 0xe0, 0x56, 0x62, 0xce, 0xe4, 0x3e, 0x1e, 0x28, 0xcd, 0x0a, 0x70, 0x6f, 0x9a, 0xc7,
	0xee, 0xe2, 0x6f, 0xb0, 0x77, 0x4a, 0xc0, 0x0e, 0x25, 0x81, 0x0f, 0x0d, 0x28, 0xfd, 0xab, 0x23,
	0x64, 0x75, 0xf4, 0xcf, 0x79, 0xf8, 0x8f, 0xf0, 0x83, 0xdf, 0x6a, 0xab, 0x4a, 0x1e, 0x14, 0xcc,
	0xbe, 0x20, 0x7c, 0xcf, 0x4e, 0xff, 0x2d, 0xd4, 0x47, 0x91, 0x01, 0xf9, 0x74, 0x79, 0xb7, 0x79,
	0xe4, 0x39, 0xbd, 0x3e, 0x77, 0x7a, 0xbd, 0x09, 0xef, 0xc5, 0x7f, 0xf3, 0x3a, 0x83, 0xfe, 0x8d,
	0xf9, 0x77, 0x84, 0x1f, 0x67, 0xb2, 0xfc, 0x83, 0xc0, 0xfc, 0xae, 0xdd, 0xc2, 0xaa, 0x9d, 0xca,
	0x0a, 0x6d, 0xde, 0xe4, 0x42, 0xbf, 0x6f, 0x52, 0x9a, 0xc9, 0x32, 0x8c, 0x0d, 0x77, 0xd9, 0xae,
	0xb4, 0x19, 0x5a, 0x0d, 0x95, 0x9c, 0xda, 0x2a, 0xd3, 0x5c, 0x86, 0xd7, 0xf7, 0xfe, 0xab, 0xd3,
	0x8b, 0x97, 0x8b, 0x6f, 0x8e, 0x77, 0xd1, 0xa1, 0xf6, 0x97, 0x74, 0x1d, 0xfd, 0xb0, 0x8b, 0x5b,
	0xbb, 0xb8, 0x5d, 0x47, 0xe9, 0xd0, 0xfc, 0xfa, 0xec, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c,
	0xf3, 0xb1, 0x30, 0x5c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ConfirmationServiceClient is the client API for ConfirmationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConfirmationServiceClient interface {
	ConfirmEmailAddress(ctx context.Context, in *ConfirmEmailAddressRequest, opts ...grpc.CallOption) (*ConfirmEmailAddressResponse, error)
}

type confirmationServiceClient struct {
	cc *grpc.ClientConn
}

func NewConfirmationServiceClient(cc *grpc.ClientConn) ConfirmationServiceClient {
	return &confirmationServiceClient{cc}
}

func (c *confirmationServiceClient) ConfirmEmailAddress(ctx context.Context, in *ConfirmEmailAddressRequest, opts ...grpc.CallOption) (*ConfirmEmailAddressResponse, error) {
	out := new(ConfirmEmailAddressResponse)
	err := c.cc.Invoke(ctx, "/alpacalabs.confirmation.v1.ConfirmationService/ConfirmEmailAddress", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConfirmationServiceServer is the server API for ConfirmationService service.
type ConfirmationServiceServer interface {
	ConfirmEmailAddress(context.Context, *ConfirmEmailAddressRequest) (*ConfirmEmailAddressResponse, error)
}

func RegisterConfirmationServiceServer(s *grpc.Server, srv ConfirmationServiceServer) {
	s.RegisterService(&_ConfirmationService_serviceDesc, srv)
}

func _ConfirmationService_ConfirmEmailAddress_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConfirmEmailAddressRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConfirmationServiceServer).ConfirmEmailAddress(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/alpacalabs.confirmation.v1.ConfirmationService/ConfirmEmailAddress",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConfirmationServiceServer).ConfirmEmailAddress(ctx, req.(*ConfirmEmailAddressRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConfirmationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "alpacalabs.confirmation.v1.ConfirmationService",
	HandlerType: (*ConfirmationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConfirmEmailAddress",
			Handler:    _ConfirmationService_ConfirmEmailAddress_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "alpacalabs/confirmation/v1/api.proto",
}
